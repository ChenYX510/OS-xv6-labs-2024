Q1：Which registers contain arguments to functions? For example, which register holds 13 in main’s call to printf?
A1： 函数参数的寄存器为 a0~a7. printf 的 13 存在寄存器 a2 中。
Q2: Where is the call to function f in the assembly code for main? Where is the call to g? (Hint: the compiler may inline functions.) 
A2：在 40 行可以看到, 编译器进行了函数内联, 直接将计算出f(8)+1的值 ，即12。
Q3: At what address is the function printf located? 
A3: 由第 43 和 44 行可以看出, jalr 跳转的地址为 0x30+1536=0x630, 即函数 printf 的地址为 0x630。
Q4: What value is in the register ra just after the jalr to printf in main? 
A4: 根据 jalr 指令的功能, 在刚跳转后 ra 的值为 pc+4=0x34+4=0x38.
Q5: Run the following code.What is the output?
A5：打印出了He110 World。其中 "e110" 是 57616 的十六进制表示，"rld" 是 0x00646c72 存储在内存中的字符串部分。
Q6: In the following code, what is going to be printed after y=? (note: the answer is not a specific value.) Why does this happen?
A6：输出的是一个受调用前的代码影响的“随机”的值。因为 printf 尝试读的参数数量比提供的参数数量多。 第二个参数 3 通过 a1 传递，而第三个参数对应的寄存器 a2 在调用前不会被设置为任何具体的值，而是会包含调用发生前的任何已经在里面的值